
-- Ce script dÃ©finit un groupe d'autocommandes appelÃ© "packer_user_config", qui vous permet de
-- organiser vos autocommandes de maniÃ¨re logique. Le groupe contient une seule autocommande, qui
-- est exÃ©cutÃ©e aprÃ¨s l'enregistrement d'un fichier (avec l'Ã©vÃ©nement "BufWritePost"). Lorsqu'elle est exÃ©cutÃ©e, elle
-- source le fichier spÃ©cifiÃ© dans <afile> et exÃ©cute la commande "PackerSync". Cela peut Ãªtre
-- utile si vous souhaitez que votre configuration soit mise Ã  jour automatiquement Ã  chaque modification du
-- fichier de configuration "setup.lua".

vim.cmd([[
augroup packer_user_config
autocmd!
autocmd BufWritePost setup.lua source <afile> | PackerSync
augroup end
]])

-- Cette ligne de code importe le module "packer" et stocke son rÃ©sultat dans la variable "packer".
-- La fonction "pcall" est utilisÃ©e pour appeler la fonction "require" de maniÃ¨re protÃ©gÃ©e, c'est-Ã -dire
-- qu'elle permet de capturer toutes les erreurs qui pourraient Ãªtre gÃ©nÃ©rÃ©es lors de l'appel de "require".
-- Si l'appel Ã  "require" a rÃ©ussi (c'est-Ã -dire que le module a Ã©tÃ© importÃ© avec succÃ¨s), alors la variable
-- "status" contiendra la valeur "true" et "packer" contiendra la valeur retournÃ©e par "require".
-- Si l'appel Ã  "require" a Ã©chouÃ© (par exemple si le module n'a pas Ã©tÃ© trouvÃ©), alors "status" contiendra
-- la valeur "false" et "packer" contiendra la valeur "nil".
-- La condition "if not status" vÃ©rifie si "status" est Ã©gal Ã  "false", et si c'est le cas, la fonction retourne
-- immÃ©diatement sans exÃ©cuter le reste du code. Cela permet de s'assurer que le reste du code ne sera pas exÃ©cutÃ©
-- si le module "packer" n'a pas pu Ãªtre importÃ©.

local status, packer = pcall(require, "packer")
if not status then
    return
end

----ğŸ„» ğŸ„¸ ğŸ…‚ ğŸ…ƒ  ğŸ„¾ ğŸ„µ  ğŸ„¿ ğŸ„» ğŸ…„ ğŸ„¶ ğŸ„¸ ğŸ„½ ğŸ…‚ ----

return packer.startup(function(use)
	use("wbthomason/packer.nvim")
	use("nvim-lua/plenary.nvim")
	use("nvim-tree/nvim-tree.lua")
	use("nvim-tree/nvim-web-devicons")
	use("numToStr/Comment.nvim")
	use("nvim-lualine/lualine.nvim")
	use("lukas-reineke/indent-blankline.nvim")
	use("utilyre/barbecue.nvim")
	use("smiteshp/nvim-navic")
	use("kyazdani42/nvim-web-devicons")
	use("folke/tokyonight.nvim")
	use({'romgrk/barbar.nvim', wants = 'nvim-web-devicons'})
	use({
		"nvim-treesitter/nvim-treesitter",
		run = function()
		  local ts_update = require("nvim-treesitter.install").update({ with_sync = true })
		  ts_update()
		end,
	  })
	use("williamboman/mason.nvim")
	use("williamboman/mason-lspconfig.nvim")
	use("neovim/nvim-lspconfig")










    if packer_bootstrap then
    require("packer").sync()
end
end)
